local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local InsertService = game:GetService("InsertService")

local player = Players.LocalPlayer

local ReGui = loadstring(game:HttpGet('https://raw.githubusercontent.com/depthso/Dear-ReGui/refs/heads/main/ReGui.lua'))()
local PrefabsId = "rbxassetid://" .. ReGui.PrefabsId

ReGui:Init({
	Prefabs = InsertService:LoadLocalAsset(PrefabsId)
})

-- 상태 변수
_G.AutoDodge = false
_G.AutoQTE = false
_G.AutoThorian = false
_G.SelectedWeapon = "Sword"

-- 루프 기능
local function startAutoDodge()
	while _G.AutoDodge do
		pcall(function()
			local remotes = ReplicatedStorage:FindFirstChild("Remotes")
			if remotes then
				local info = remotes:FindFirstChild("Information")
				local rf = info and info:FindFirstChild("RemoteFunction")
				if rf then
					rf:FireServer({true, true}, "DodgeMinigame")
				end
			end
		end)
		wait(0.2)
	end
end

local function startAutoQTE()
	while _G.AutoQTE do
		pcall(function()
			local remotes = ReplicatedStorage:FindFirstChild("Remotes")
			if remotes then
				local info = remotes:FindFirstChild("Information")
				local rf = info and info:FindFirstChild("RemoteFunction")
				if rf then
					rf:FireServer(true, _G.SelectedWeapon .. "QTE")
				end
			end
		end)
		wait(0.4)
	end
end

local function startAutoThorianQTE()
	while _G.AutoThorian do
		pcall(function()
			local remotes = ReplicatedStorage:FindFirstChild("Remotes")
			if remotes then
				local info = remotes:FindFirstChild("Information")
				local rf = info and info:FindFirstChild("RemoteFunction")
				if rf then
					rf:FireServer(true, "ThorianQTE")
				end
			end
		end)
		wait(0.4)
	end
end

-- ReGui 윈도우 구성
local Window = ReGui:TabsWindow({
	Title = "Auto System UI",
	Size = UDim2.fromOffset(350, 280)
})

-- 자동회피 탭
local DodgeTab = Window:CreateTab({ Name = "자동회피" })
local dodgeButton = DodgeTab:Button({
	Text = "자동회피: OFF",
	Callback = function(btn)
		_G.AutoDodge = not _G.AutoDodge
		btn:SetText("자동회피: " .. (_G.AutoDodge and "ON" or "OFF"))
		if _G.AutoDodge then
			task.spawn(startAutoDodge)
		end
	end
})

-- 무기 QTE 탭
local QteTab = Window:CreateTab({ Name = "무기 QTE" })

local qteButton = QteTab:Button({
	Text = "무기 QTE: OFF",
	Callback = function(btn)
		_G.AutoQTE = not _G.AutoQTE
		btn:SetText("무기 QTE: " .. (_G.AutoQTE and "ON" or "OFF"))
		if _G.AutoQTE then
			task.spawn(startAutoQTE)
		end
	end
})

QteTab:Label({ Text = "무기 선택:" })
local weapons = {"Sword", "Spear", "Magic", "Dagger", "Fist"}

for _, weapon in ipairs(weapons) do
	QteTab:Button({
		Text = weapon,
		Callback = function()
			_G.SelectedWeapon = weapon
			print("선택된 무기:", weapon)
		end
	})
end

-- 토리안 QTE 탭
local ThorianTab = Window:CreateTab({ Name = "토리안 QTE" })
local thorianButton = ThorianTab:Button({
	Text = "토리안 QTE: OFF",
	Callback = function(btn)
		_G.AutoThorian = not _G.AutoThorian
		btn:SetText("토리안 QTE: " .. (_G.AutoThorian and "ON" or "OFF"))
		if _G.AutoThorian then
			task.spawn(startAutoThorianQTE)
		end
	end
})

-- K 키로 UI 숨기기
UIS.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.K then
		Window:SetFlag("Hidden", not Window:GetFlag("Hidden"))
	end
end)
