local RunService = game:GetService("RunService")
local ReGui = require(game.ReplicatedStorage.ReGui)
ReGui:Init()
ReGui:DefineTheme("Cherry", {
	TitleAlign = Enum.TextXAlignment.Center,
	TextDisabled = Color3.fromRGB(120, 100, 120),
	Text = Color3.fromRGB(200, 180, 200),
	
	FrameBg = Color3.fromRGB(40, 40, 40),
	FrameBgTransparency = 0.4,
	FrameBgActive = Color3.fromRGB(70, 130, 180),
	FrameBgTransparencyActive = 0.4,
	
	ButtonsBg = Color3.fromRGB(100, 100, 100),
	CollapsingHeaderBg = Color3.fromRGB(100, 100, 100),
	CollapsingHeaderText = Color3.fromRGB(255, 255, 255),
	
	WindowBg = Color3.fromRGB(40, 40, 40),
	TitleBarBg = Color3.fromRGB(50, 50, 50),
	TitleBarBgActive = Color3.fromRGB(60, 60, 60),
	
	Border = Color3.fromRGB(50, 45, 50),
})

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- GUI 생성
local Window = ReGui:Window({
	Title = "Auto System",
	Theme = "Cherry",
	NoClose = true,
	Size = UDim2.new(0, 250, 0, 400),
}):Center()

local Group = Window:List({
	UiPadding = 5,
	HorizontalFlex = Enum.UIFlexAlignment.Fill,
})

-- 자동회피 버튼
local dodgeButton = Group:Button({
	Text = "자동회피: OFF",
	Callback = function()
		_G.AutoDodge = not _G.AutoDodge
		dodgeButton.Text = "자동회피: " .. (_G.AutoDodge and "ON" or "OFF")
		if _G.AutoDodge then
			if not autoDodgeTask then
				autoDodgeTask = task.spawn(startAutoDodge)
			end
		else
			autoDodgeTask = nil
		end
	end,
})

-- 무기 QTE 버튼
local qteButton = Group:Button({
	Text = "무기 QTE: OFF",
	Callback = function()
		_G.AutoQTE = not _G.AutoQTE
		qteButton.Text = "무기 QTE: " .. (_G.AutoQTE and "ON" or "OFF")
		if _G.AutoQTE then
			if not autoQteTask then
				autoQteTask = task.spawn(startAutoQTE)
			end
		else
			autoQteTask = nil
		end
	end,
})

-- 토리안 QTE 버튼
local thorianButton = Group:Button({
	Text = "토리안 QTE: OFF",
	Callback = function()
		_G.AutoThorian = not _G.AutoThorian
		thorianButton.Text = "토리안 QTE: " .. (_G.AutoThorian and "ON" or "OFF")
		if _G.AutoThorian then
			if not autoThorianTask then
				autoThorianTask = task.spawn(startAutoThorianQTE)
			end
		else
			autoThorianTask = nil
		end
	end,
})

-- 무기 선택 버튼 생성
local weapons = {"Sword", "Spear", "Magic", "Dagger", "Fist"}
for i, weapon in ipairs(weapons) do
	local button = Group:Button({
		Text = weapon,
		Callback = function()
			_G.SelectedWeapon = weapon
			print("선택된 무기:", weapon)
		end,
	})
end

-- 자동회피 루프
local function startAutoDodge()
	while _G.AutoDodge do
		pcall(function()
			local remotes = ReplicatedStorage:FindFirstChild("Remotes")
			if remotes then
				local info = remotes:FindFirstChild("Information")
				local rf = info and info:FindFirstChild("RemoteFunction")
				if rf then
					rf:FireServer({true, true}, "DodgeMinigame")
				end
			end
		end)
		wait(0.2)
	end
end

-- 무기 QTE 루프
local function startAutoQTE()
	while _G.AutoQTE do
		pcall(function()
			local remotes = ReplicatedStorage:FindFirstChild("Remotes")
			if remotes then
				local info = remotes:FindFirstChild("Information")
				local rf = info and info:FindFirstChild("RemoteFunction")
				if rf then
					local qteName = _G.SelectedWeapon .. "QTE"
					rf:FireServer(true, qteName)
				end
			end
		end)
		wait(0.4)
	end
end

-- 토리안 QTE 루프
local function startAutoThorianQTE()
	while _G.AutoThorian do
		pcall(function()
			local remotes = ReplicatedStorage:FindFirstChild("Remotes")
			if remotes then
				local info = remotes:FindFirstChild("Information")
				local rf = info and info:FindFirstChild("RemoteFunction")
				if rf then
					rf:FireServer(true, "ThorianQTE")
				end
			end
		end)
		wait(0.4)
	end
end

-- K키로 GUI 숨기기/보이기
UIS.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.K then
		Window:SetVisible(not Window.Visible)
	end
end)
