local InsertService = game:GetService("InsertService")
local ReGui = loadstring(game:HttpGet('https://raw.githubusercontent.com/depthso/Dear-ReGui/refs/heads/main/ReGui.lua'))()
local PrefabsId = "rbxassetid://" .. ReGui.PrefabsId

--// Declare the Prefabs asset
ReGui:Init({
    Prefabs = InsertService:LoadLocalAsset(PrefabsId)
})

local Window = ReGui:TabsWindow({
    Title = "AutoSystem",
    Size = UDim2.fromOffset(300, 400)
})

--// Create tabs
local Names = {"메인"}

for _, Name in next, Names do
    --// Create tab
    local Tab = Window:CreateTab({Name = Name})
    
    --// 메인 탭 내용
    Tab:Label({
        Text = "이곳엔 메인 기능들이 있습니다다!"
    })
    
    -- 자동회피 버튼
    local dodgeButton = Tab:Button({
        Text = "자동회피: OFF",
        Font = Enum.Font.SourceSansBold,
        TextSize = 18,
        BackgroundColor = Color3.fromRGB(70, 130, 180),
        TextColor = Color3.new(1, 1, 1)
    })
    dodgeButton.MouseButton1Click:Connect(function()
        _G.AutoDodge = not _G.AutoDodge
        dodgeButton.Text = "자동회피: " .. (_G.AutoDodge and "ON" or "OFF")
        if _G.AutoDodge and not autoDodgeTask then
            autoDodgeTask = task.spawn(startAutoDodge)
        elseif not _G.AutoDodge then
            autoDodgeTask = nil
        end
    end)
    
    -- 무기 QTE 버튼
    local qteButton = Tab:Button({
        Text = "무기 QTE: OFF",
        Font = Enum.Font.SourceSansBold,
        TextSize = 18,
        BackgroundColor = Color3.fromRGB(180, 100, 70),
        TextColor = Color3.new(1, 1, 1)
    })
    qteButton.MouseButton1Click:Connect(function()
        _G.AutoQTE = not _G.AutoQTE
        qteButton.Text = "무기 QTE: " .. (_G.AutoQTE and "ON" or "OFF")
        if _G.AutoQTE and not autoQteTask then
            autoQteTask = task.spawn(startAutoQTE)
        elseif not _G.AutoQTE then
            autoQteTask = nil
        end
    end)
    
    -- 토리안 QTE 버튼
    local thorianButton = Tab:Button({
        Text = "토리안 QTE: OFF",
        Font = Enum.Font.SourceSansBold,
        TextSize = 18,
        BackgroundColor = Color3.fromRGB(140, 70, 180),
        TextColor = Color3.new(1, 1, 1)
    })
    thorianButton.MouseButton1Click:Connect(function()
        _G.AutoThorian = not _G.AutoThorian
        thorianButton.Text = "토리안 QTE: " .. (_G.AutoThorian and "ON" or "OFF")
        if _G.AutoThorian and not autoThorianTask then
            autoThorianTask = task.spawn(startAutoThorianQTE)
        elseif not _G.AutoThorian then
            autoThorianTask = nil
        end
    end)
    
    -- 무기 선택 버튼들
    local weapons = {"Sword", "Spear", "Magic", "Dagger", "Fist"}
    for i, weapon in ipairs(weapons) do
        local button = Tab:Button({
            Text = weapon,
            Font = Enum.Font.SourceSans,
            TextSize = 14,
            BackgroundColor = Color3.fromRGB(100, 100, 100),
            TextColor = Color3.new(1, 1, 1)
        })
        button.MouseButton1Click:Connect(function()
            _G.SelectedWeapon = weapon
            print("선택된 무기:", weapon)
        end)
    end
end

-- 자동회피 루프
local function startAutoDodge()
    while _G.AutoDodge do
        pcall(function()
            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
            if remotes then
                local info = remotes:FindFirstChild("Information")
                local rf = info and info:FindFirstChild("RemoteFunction")
                if rf then
                    rf:FireServer({true, true}, "DodgeMinigame")
                end
            end
        end)
        wait(0.2)
    end
end

-- 무기 QTE 루프
local function startAutoQTE()
    while _G.AutoQTE do
        pcall(function()
            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
            if remotes then
                local info = remotes:FindFirstChild("Information")
                local rf = info and info:FindFirstChild("RemoteFunction")
                if rf then
                    local qteName = _G.SelectedWeapon .. "QTE"
                    rf:FireServer(true, qteName)
                end
            end
        end)
        wait(0.4)
    end
end

-- 토리안 QTE 루프
local function startAutoThorianQTE()
    while _G.AutoThorian do
        pcall(function()
            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
            if remotes then
                local info = remotes:FindFirstChild("Information")
                local rf = info and info:FindFirstChild("RemoteFunction")
                if rf then
                    rf:FireServer(true, "ThorianQTE")
                end
            end
        end)
        wait(0.4)
    end
end

-- K키로 GUI 숨기기/보이기
UIS.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.K then
        Window.Visible = not Window.Visible
    end
end)
