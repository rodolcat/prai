-- 서비스 로드
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")

-- 플레이어 및 GUI 초기화
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Dear-ReGui 모듈 로드
local DearReGui = require(ReplicatedStorage:WaitForChild("DearReGui"))

-- 상태 변수
local autoDodge = false
local autoQTE = false
local autoThorian = false
local selectedWeapon = "Sword"

-- 기능 루프 태스크
local autoDodgeTask = nil
local autoQteTask = nil
local autoThorianTask = nil

-- 자동회피 루프 함수
local function startAutoDodge()
    while autoDodge do
        pcall(function()
            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
            if remotes then
                local info = remotes:FindFirstChild("Information")
                local rf = info and info:FindFirstChild("RemoteFunction")
                if rf then
                    rf:FireServer({true, true}, "DodgeMinigame")
                end
            end
        end)
        wait(0.2)
    end
end

-- 무기 QTE 루프 함수
local function startAutoQTE()
    while autoQTE do
        pcall(function()
            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
            if remotes then
                local info = remotes:FindFirstChild("Information")
                local rf = info and info:FindFirstChild("RemoteFunction")
                if rf then
                    local qteName = selectedWeapon .. "QTE"
                    rf:FireServer(true, qteName)
                end
            end
        end)
        wait(0.4)
    end
end

-- 토리안 QTE 루프 함수
local function startAutoThorianQTE()
    while autoThorian do
        pcall(function()
            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
            if remotes then
                local info = remotes:FindFirstChild("Information")
                local rf = info and info:FindFirstChild("RemoteFunction")
                if rf then
                    rf:FireServer(true, "ThorianQTE")
                end
            end
        end)
        wait(0.4)
    end
end

-- GUI 생성
local gui = DearReGui:CreateWindow("AutoSystemUI", UDim2.new(0, 230, 0, 320), UDim2.new(0.6, -100, 0.5, -160))

-- 자동회피 버튼
gui:AddButton("자동회피: OFF", function(button)
    autoDodge = not autoDodge
    button:SetText("자동회피: " .. (autoDodge and "ON" or "OFF"))
    if autoDodge and not autoDodgeTask then
        autoDodgeTask = task.spawn(startAutoDodge)
    elseif not autoDodge then
        autoDodgeTask = nil
    end
end)

-- 무기 QTE 버튼
gui:AddButton("무기 QTE: OFF", function(button)
    autoQTE = not autoQTE
    button:SetText("무기 QTE: " .. (autoQTE and "ON" or "OFF"))
    if autoQTE and not autoQteTask then
        autoQteTask = task.spawn(startAutoQTE)
    elseif not autoQTE then
        autoQteTask = nil
    end
end)

-- 토리안 QTE 버튼
gui:AddButton("토리안 QTE: OFF", function(button)
    autoThorian = not autoThorian
    button:SetText("토리안 QTE: " .. (autoThorian and "ON" or "OFF"))
    if autoThorian and not autoThorianTask then
        autoThorianTask = task.spawn(startAutoThorianQTE)
    elseif not autoThorian then
        autoThorianTask = nil
    end
end)

-- 무기 선택 드롭다운
gui:AddDropdown("무기 선택", {"Sword", "Spear", "Magic", "Dagger", "Fist"}, function(selected)
    selectedWeapon = selected
    print("선택된 무기:", selectedWeapon)
end)

-- K키로 GUI 토글
UIS.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.K then
        gui:SetVisible(not gui:IsVisible())
    end
end)
