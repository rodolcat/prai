-- Services
local Players           = game:GetService("Players")
local Workspace         = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService        = game:GetService("RunService")
local UIS               = game:GetService("UserInputService")
local InsertService     = game:GetService("InsertService")

-- Player & Character
local player           = Players.LocalPlayer
local character        = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Load Dear ReGui
local ReGui = loadstring(game:HttpGet(
    'https://raw.githubusercontent.com/depthso/Dear-ReGui/refs/heads/main/ReGui.lua'
))()
local PrefabsId = "rbxassetid://" .. ReGui.PrefabsId
ReGui:Init({
    Prefabs = InsertService:LoadLocalAsset(PrefabsId)
})

-- Global State
_G.AutoDodge      = false
_G.AutoQTE        = false
_G.AutoThorian    = false
_G.SelectedWeapon = "Sword"

local autoDodgeTask, autoQteTask, autoThorianTask
local selectedNPC

--=== CORE BEHAVIORS ===--

local function startAutoDodge()
    while _G.AutoDodge do
        pcall(function()
            local info = ReplicatedStorage:FindFirstChild("Remotes")
                          and ReplicatedStorage.Remotes:FindFirstChild("Information")
            local rf   = info and info:FindFirstChild("RemoteFunction")
            if rf then rf:FireServer({true, true}, "DodgeMinigame") end
        end)
        task.wait(0.2)
    end
end

local function startAutoQTE()
    while _G.AutoQTE do
        pcall(function()
            local info = ReplicatedStorage:FindFirstChild("Remotes")
                          and ReplicatedStorage.Remotes:FindFirstChild("Information")
            local rf   = info and info:FindFirstChild("RemoteFunction")
            if rf then rf:FireServer(true, _G.SelectedWeapon .. "QTE") end
        end)
        task.wait(0.4)
    end
end

local function startAutoThorianQTE()
    while _G.AutoThorian do
        pcall(function()
            local info = ReplicatedStorage:FindFirstChild("Remotes")
                          and ReplicatedStorage.Remotes:FindFirstChild("Information")
            local rf   = info and info:FindFirstChild("RemoteFunction")
            if rf then rf:FireServer(true, "ThorianQTE") end
        end)
        task.wait(0.4)
    end
end

local function fastTeleportTo(npc)
    if not (npc and npc:FindFirstChild("HumanoidRootPart")) then return end
    -- Disable collisions
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then part.CanCollide = false end
    end
    -- Animate movement
    local from  = humanoidRootPart.Position
    local toPos = npc.HumanoidRootPart.Position
    local dir   = (toPos - from).Unit
    local dist  = (toPos - from).Magnitude
    local dur   = dist / 200
    local t0    = tick()
    local conn
    conn = RunService.Heartbeat:Connect(function(dt)
        local elapsed = tick() - t0
        if elapsed >= dur then
            humanoidRootPart.CFrame = CFrame.new(toPos)
            conn:Disconnect()
        else
            humanoidRootPart.CFrame = humanoidRootPart.CFrame + dir * 200 * dt
        end
    end)
end

--=== BUILD ReGui WINDOW ===--

local Window = ReGui:TabsWindow({
    Title = "AutoSystem & Teleport",
    Size  = UDim2.fromOffset(360, 520),
})

--––– Tab 1: 메인 –––
local mainTab = Window:CreateTab({Name = "메인"})
mainTab:Label({Text = "이곳엔 메인 기능들이 있습니다다!"})

-- Auto-Dodge toggle
mainTab:Button({
    Text     = "자동회피: OFF",
    TextSize = 18,
    Callback = function(self)
        _G.AutoDodge = not _G.AutoDodge
        self:SetText("자동회피: " .. (_G.AutoDodge and "ON" or "OFF"))
        if _G.AutoDodge then
            autoDodgeTask = task.spawn(startAutoDodge)
        else
            autoDodgeTask = nil
        end
    end,
})

-- Weapon QTE toggle
mainTab:Button({
    Text     = "무기 QTE: OFF",
    TextSize = 18,
    Callback = function(self)
        _G.AutoQTE = not _G.AutoQTE
        self:SetText("무기 QTE: " .. (_G.AutoQTE and "ON" or "OFF"))
        if _G.AutoQTE then
            autoQteTask = task.spawn(startAutoQTE)
        else
            autoQteTask = nil
        end
    end,
})

-- Thorian QTE toggle
mainTab:Button({
    Text     = "토리안 QTE: OFF",
    TextSize = 18,
    Callback = function(self)
        _G.AutoThorian = not _G.AutoThorian
        self:SetText("토리안 QTE: " .. (_G.AutoThorian and "ON" or "OFF"))
        if _G.AutoThorian then
            autoThorianTask = task.spawn(startAutoThorianQTE)
        else
            autoThorianTask = nil
        end
    end,
})

-- Weapon selection
mainTab:Label({Text = "무기 선택:"})
for _, w in ipairs({"Sword","Spear","Magic","Dagger","Fist"}) do
    mainTab:Button({
        Text     = w,
        TextSize = 14,
        Callback = function()
            _G.SelectedWeapon = w
            warn("선택된 무기:", w)
        end,
    })
end

--––– Tab 2: NPC 이동 –––
local npcTab = Window:CreateTab({Name = "NPC 이동"})
npcTab:Label({Text = "🧭 NPC 빠른이동"})

local reloadBtn    = npcTab:Button({Text = "🔄 NPC 다시 불러오기"})
local scrollCanvas = npcTab:ScrollingCanvas({Fill = true, UiPadding = UDim.new(0,4)})
local tpBtn        = npcTab:Button({Text = "🚀 선택한 NPC로 이동", TextSize = 16})

-- Load NPC list
local function loadNPCs()
    selectedNPC = nil
    for _, guiObj in ipairs(scrollCanvas.Frame:GetChildren()) do
        if guiObj:IsA("GuiObject") then guiObj:Destroy() end
    end
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model")
        and obj:FindFirstChild("Humanoid")
        and obj:FindFirstChild("HumanoidRootPart") then
            local btn = scrollCanvas:Button({Text = obj.Name, TextSize = 14})
            btn.MouseButton1Click:Connect(function()
                selectedNPC = obj
                for _, sib in ipairs(scrollCanvas.Frame:GetChildren()) do
                    if sib:IsA("TextButton") then
                        sib.BackgroundColor3 = Color3.fromRGB(90,90,90)
                    end
                end
                btn.BackgroundColor3 = Color3.fromRGB(0,170,255)
            end)
        end
    end
end

reloadBtn.MouseButton1Click:Connect(loadNPCs)
tpBtn.MouseButton1Click:Connect(function()
    if selectedNPC then
        fastTeleportTo(selectedNPC)
    else
        tpBtn:SetText("❗ NPC 선택하세요")
        task.delay(1, function() tpBtn:SetText("🚀 선택한 NPC로 이동") end)
    end
end)

-- Initial load
loadNPCs()

-- K키로 전체 윈도우 토글
UIS.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.K then
        Window:ToggleVisibility()
    end
end)
