local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local InsertService = game:GetService("InsertService")

local player = Players.LocalPlayer

-- ReGui 불러오기 및 초기화
local ReGui = loadstring(game:HttpGet('https://raw.githubusercontent.com/depthso/Dear-ReGui/refs/heads/main/ReGui.lua'))()
local PrefabsId = "rbxassetid://" .. ReGui.PrefabsId

ReGui:Init({
	Prefabs = InsertService:LoadLocalAsset(PrefabsId)
})

-- 커스텀 엘리먼트 정의 예시 (DefineElement)
ReGui:DefineElement("PurpleText", {
	Base = {
		IsBigText = true,
		Text = "기본 텍스트",
	},
	Create = function(self, Config)
		local Label = Instance.new("TextLabel")
		Label.TextSize = Config.IsBigText and 24 or 14
		Label.TextColor3 = Color3.fromRGB(180, 100, 255)
		Label.Text = Config.Text
		Label.BackgroundTransparency = 1
		Label.Size = UDim2.new(1, 0, 0, 30)
		return Label
	end,
})

-- 글로벌 플래그 정의 예시 (DefineGlobalFlag)
ReGui:DefineGlobalFlag({
	Properties = {"Hidden"},
	Callback = function(Data, Object, Value)
		Object.Visible = not Value
	end
})

-- 상태 변수
_G.AutoDodge = false
_G.AutoQTE = false
_G.AutoThorian = false
_G.SelectedWeapon = "Sword"

-- ReGui 윈도우 생성
local Window = ReGui:TabsWindow({
	Title = "자동 시스템 UI",
	Size = UDim2.fromOffset(320, 280),
})

-- 기능 탭 생성
local 기능탭 = Window:CreateTab({ Name = "기능" })

-- 기능 버튼 생성 함수
local function CreateToggle(tab, name, stateVar, startFunc)
	tab:Button({
		Text = name .. ": OFF",
		Callback = function(Button)
			_G[stateVar] = not _G[stateVar]
			Button:SetText(name .. ": " .. (_G[stateVar] and "ON" or "OFF"))
			if _G[stateVar] then
				task.spawn(startFunc)
			end
		end,
	})
end

-- 자동 루프 함수들
local function startAutoDodge()
	while _G.AutoDodge do
		pcall(function()
			local rf = ReplicatedStorage:FindFirstChild("Remotes")
				and ReplicatedStorage.Remotes:FindFirstChild("Information")
				and ReplicatedStorage.Remotes.Information:FindFirstChild("RemoteFunction")
			if rf then
				rf:FireServer({true, true}, "DodgeMinigame")
			end
		end)
		wait(0.2)
	end
end

local function startAutoQTE()
	while _G.AutoQTE do
		pcall(function()
			local rf = ReplicatedStorage:FindFirstChild("Remotes")
				and ReplicatedStorage.Remotes:FindFirstChild("Information")
				and ReplicatedStorage.Remotes.Information:FindFirstChild("RemoteFunction")
			if rf then
				rf:FireServer(true, _G.SelectedWeapon .. "QTE")
			end
		end)
		wait(0.4)
	end
end

local function startAutoThorianQTE()
	while _G.AutoThorian do
		pcall(function()
			local rf = ReplicatedStorage:FindFirstChild("Remotes")
				and ReplicatedStorage.Remotes:FindFirstChild("Information")
				and ReplicatedStorage.Remotes.Information:FindFirstChild("RemoteFunction")
			if rf then
				rf:FireServer(true, "ThorianQTE")
			end
		end)
		wait(0.4)
	end
end

-- 기능 버튼 추가
CreateToggle(기능탭, "자동회피", "AutoDodge", startAutoDodge)
CreateToggle(기능탭, "무기 QTE", "AutoQTE", startAutoQTE)
CreateToggle(기능탭, "토리안 QTE", "AutoThorian", startAutoThorianQTE)

-- 무기 선택 탭 생성
local 무기탭 = Window:CreateTab({ Name = "무기 선택" })
local weapons = {"Sword", "Spear", "Magic", "Dagger", "Fist"}

무기탭:Label({ Text = "무기를 선택하세요." })

for _, weapon in ipairs(weapons) do
	무기탭:Button({
		Text = weapon,
		Callback = function()
			_G.SelectedWeapon = weapon
			print("선택된 무기:", weapon)
		end
	})
end

-- K 키로 UI 숨기기/보이기 (글로벌 플래그 이용)
UIS.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.K then
		Window:SetFlag("Hidden", not Window:GetFlag("Hidden"))
	end
end)
