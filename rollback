local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local camera = workspace.CurrentCamera

local flying = false
local velocity, gyro
local speed = 100

local keysDown = {}

player.CharacterAdded:Connect(function(char)
	character = char
end)

-- 키 입력 처리
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	keysDown[input.KeyCode] = true

	if input.KeyCode == Enum.KeyCode.L then
		flying = not flying
		local humanoid = character:WaitForChild("Humanoid")
		local hrp = character:WaitForChild("HumanoidRootPart")

		if flying then
			humanoid.PlatformStand = true

			-- BodyVelocity 생성
			velocity = Instance.new("BodyVelocity")
			velocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
			velocity.Velocity = Vector3.zero
			velocity.P = 1250
			velocity.Name = "FlyVelocity"
			velocity.Parent = hrp

			-- BodyGyro 생성
			gyro = Instance.new("BodyGyro")
			gyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
			gyro.P = 100000
			gyro.CFrame = hrp.CFrame
			gyro.Name = "FlyGyro"
			gyro.Parent = hrp
		else
			humanoid.PlatformStand = false
			if velocity then velocity:Destroy() end
			if gyro then gyro:Destroy() end
		end
	end
end)

UserInputService.InputEnded:Connect(function(input)
	keysDown[input.KeyCode] = nil
end)

-- 매 프레임마다 이동 방향 갱신
RunService.RenderStepped:Connect(function()
	if flying and velocity and gyro and character:FindFirstChild("HumanoidRootPart") then
		local camCF = camera.CFrame
		local moveDir = Vector3.zero

		if keysDown[Enum.KeyCode.W] then
			moveDir += camCF.LookVector
		end
		if keysDown[Enum.KeyCode.S] then
			moveDir -= camCF.LookVector
		end
		if keysDown[Enum.KeyCode.A] then
			moveDir -= camCF.RightVector
		end
		if keysDown[Enum.KeyCode.D] then
			moveDir += camCF.RightVector
		end

		-- 방향이 있을 때만 단위 벡터 계산
		if moveDir.Magnitude > 0 then
			moveDir = moveDir.Unit * speed
		end

		velocity.Velocity = moveDir
		gyro.CFrame = CFrame.new(character.HumanoidRootPart.Position, character.HumanoidRootPart.Position + camCF.LookVector)
	end
end)
