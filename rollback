-- 롤백 데이터 저장 변수
local rollbackData = {}
local isRollbackSaved = false

-- UI 생성
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "TradeDupeExploiter"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = game:GetService("CoreGui")

-- 버튼 생성 함수
local function createButton(name, position, text, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0, 200, 0, 50)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 24
    button.Text = text
    button.Parent = ScreenGui
    button.MouseButton1Click:Connect(callback)
end

-- Rollback 버튼 기능
createButton("RollbackButton", UDim2.new(0, 100, 0, 100), "Rollback", function()
    if not isRollbackSaved then
        rollbackData = {
            inventory = {},
            character = {}
        }

        -- 인벤토리 상태 저장
        for _, item in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            table.insert(rollbackData.inventory, {
                name = item.Name,
                attributes = item:GetAttributes(),
                children = {}
            })
        end

        -- 캐릭터 상태 저장
        local character = game.Players.LocalPlayer.Character
        rollbackData.character = {
            position = character.HumanoidRootPart.Position,
            rotation = character.HumanoidRootPart.Rotation,
            health = character.Humanoid.Health,
            attributes = character:GetAttributes()
        }

        isRollbackSaved = true
        print("Rollback point saved. Ready for trade.")
    else
        print("Rollback already saved. Please rejoin to reset.")
    end
end)

-- Rejoin 버튼 기능
createButton("RejoinButton", UDim2.new(0, 100, 0, 160), "Rejoin and Dupe", function()
    if isRollbackSaved then
        -- 인벤토리 복제
        for _, itemData in ipairs(rollbackData.inventory) do
            local newItem = Instance.new(itemData.name)
            newItem.Parent = game.Players.LocalPlayer.Backpack
            for attribute, value in pairs(itemData.attributes) do
                newItem:SetAttribute(attribute, value)
            end
            for _, child in pairs(itemData.children) do
                local newChild = Instance.new(child.name)
                newChild.Parent = newItem
                newChild:SetAttributes(child.attributes)
            end
        end

        -- 캐릭터 상태 복원
        local character = game.Players.LocalPlayer.Character
        character:SetPrimaryPartCFrame(CFrame.fromMatrix(rollbackData.character.position, rollbackData.character.rotation))
        character.Humanoid.Health = rollbackData.character.health
        for attribute, value in pairs(rollbackData.character.attributes) do
            character:SetAttribute(attribute, value)
        end

        isRollbackSaved = false
        print("Rollback complete. Duplicated items added to inventory.")
    else
        print("No rollback point set. Please save a rollback point first.")
    end
end)

-- 거래 완료 후 재접속 함수
local function tradeCompleted()
    wait(5) -- 거래 완료 후 5초 대기
    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
end

-- 거래 시작 시 롤백 버튼 활성화
game.Players.LocalPlayer.CharacterAdded:Connect(function()
    isRollbackSaved = false
    print("Character loaded. Rollback button is now active.")
end)

-- 거래 완료 이벤트에 재접속 함수 연결
game:GetService("ReplicatedStorage").TradeCompleted:Connect(tradeCompleted)
